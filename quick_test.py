#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""
import subprocess
import sys

def run_quick_test():
    """–ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å –º–µ–Ω—å—à–∏–º –æ–±—ä–µ–º–æ–º –¥–∞–Ω–Ω—ã—Ö"""
    cmd = [
        "python", "aibot2.py",
        "--symbol", "SOL/USDT",
        "--timeframe", "15m", 
        "--max-bars", "10000",  # –ú–µ–Ω—å—à–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        "--last-days", "0"  # –û—Ç–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–ø–µ—Ä—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!
    ]
    
    print("üöÄ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞")
    print("=" * 50)
    print("üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print("  ‚Ä¢ –î–∞–Ω–Ω—ã–µ: 10,000 –±–∞—Ä–æ–≤ (~1 –º–µ—Å—è—Ü)")
    print("  ‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º: dynamic (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)")
    print("  ‚Ä¢ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: –í–ö–õ")
    print("  ‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–æ—Å–∞–¥–æ–∫: -15%")
    print("  ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: 80%")
    print("\n‚è±Ô∏è –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è: 2-3 –º–∏–Ω—É—Ç—ã...")
    print("\n" + "=" * 50)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        process = subprocess.Popen(
            cmd, 
            stdout=subprocess.PIPE, 
            stderr=subprocess.PIPE, 
            text=True,
            bufsize=1,
            universal_newlines=True
        )
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        while True:
            output = process.stdout.readline()
            if output == '' and process.poll() is not None:
                break
            if output:
                print(output.strip())
                sys.stdout.flush()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
        stderr = process.stderr.read()
        if stderr:
            print("\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è/–æ—à–∏–±–∫–∏:")
            print(stderr[:1000])  # –ü–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤
        
        rc = process.poll()
        if rc == 0:
            print("\n‚úÖ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:")
            print("  ‚Ä¢ best_thresholds.json - –Ω–æ–≤—ã–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ä–æ–≥–∏")
            print("  ‚Ä¢ backtest_oof_results.csv - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—ç–∫—Ç–µ—Å—Ç–∞")
            print("  ‚Ä¢ trades_all.json - –≤—Å–µ —Å–¥–µ–ª–∫–∏")
            
            print("\nüéØ –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
            print("  python test_improvements.py")
            
        else:
            print(f"\n‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: {rc})")
            
        return rc == 0
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        if 'process' in locals():
            process.terminate()
        return False
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = run_quick_test()
    
    if success:
        print("\nüéâ –ì–û–¢–û–í–û! –£–ª—É—á—à–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã.")
        print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–≤—ã–π best_thresholds.json")
        print("  2. –°—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º")
        print("  3. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö:")
        print("     python aibot2.py --search dynamic --max-bars 50000")
    else:
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("  ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("  ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º:")
        print("    python aibot.py --symbol SOL/USDT --max-bars 10000")
